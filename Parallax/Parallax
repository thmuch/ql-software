1 REMark * * * * * * * * * * * *
2 REMark *     QL Parallax     *
3 REMark *  (c)1987 Much Soft  *
4 REMark * * * * * * * * * * * *
5 REMark * Thomas Much         *
6 REMark * Koppelweg 16a       *
7 REMark * 3201 Diekholzen     *
8 REMark * Tel.: 05121/262007  *
9 REMark * * * * * * * * * * * *
10 MODE 4: CLEAR: RESTORE : TRA 1: BAUD 9600
12 RANDOMISE: fx=1
14 WHEN ERRor : BEEP 10000,5,18695,4,6,0,5,0: END WHEN 
20 WINDOW#0,320,70,0,186
22 OPEN#1,con: WINDOW#1,320,186,0,0
24 OPEN#2,con: WINDOW#2,192,166,320,90
26 OPEN#3,con: WINDOW#3,192,90,320,0
40 FOR k=0 TO 3: BORDER#k,0: PAPER#k,0: INK#k,7: CLS#k: END FOR k
42 rahmen 0,340: rahmen 1,127
44 rahmen 2,85: rahmen 3,158
50 men‡
52 DIM comm$(1,6): comm$(1,1 TO 6)="      "
54 galaxie=1: sek1=1: sek2=1: fuel=100: energy=100
56 tinte=7: rschiff=0: t2=0
58 credits=1000: sgold=0: scfs=0: sschrott=0: seisen=0: scomputer=0: skleidung=0: sersatz=0: sbatt=0: shamb=0: sb‡cher=0
80 RANDOMISE
90 init: ginit
92 time=DATE: pcs
99 STOP
100 DEFine PROCedure anzeige
102 AT#3,0,10: PRINT#3;galaxie;" "
104 AT#3,1,10: PRINT#3;sek1;",";sek2
110 BLOCK#3,50,20,60,50,7
120 BLOCK#3,fuel/2,10,60,50,4
122 BLOCK#3,energy/2,10,60,60,2
140 fuel=fuel-.1
150 IF fuel<=0 THEN PRINT#0: PRINT#0;"MISSION FAILED": PRINT#0;" ==> No Fuel": CLS#2: PRINT#2;"Nach Treibstoffmangel ist das Raumschiff           Implodiert.             Mission gescheitert ...": esc: GO TO 50
152 IF energy<=0 THEN PRINT#0: PRINT#0;"MISSION FAILED": PRINT#0;" ==> No Energy": CLS#2: PRINT#2;"Nach Energiemangel wurde  das Raumschiff u.a.      Gefriergetrocknet.      Mission gescheitert ...": esc: GO TO 50
160 IF credits<0 THEN credits=0
162 IF KEYROW(1)=1 THEN fx=0
164 IF KEYROW(7)=1 THEN fx=1
199 END DEFine 
200 DEFine PROCedure esc
202 PRINT#0: PRINT#0;" --- Press ESC to continue."
204 IF fx THEN bell
206 IF KEYROW(1)=8 THEN END DEFine 
208 GO TO 206
209 END DEFine 
220 DEFine PROCedure ginit
222 DIM gxe$(10,5,5)
230 RESTORE 32500
240 FOR g=1 TO 10
242  FOR sk1=1 TO 5
244   READ gxe$(g,sk1,1 TO 5)
246  END FOR sk1
248 END FOR g
299 END DEFine 
300 DEFine PROCedure fly
302 lnd=0: tl=0
310 IF gxe$(galaxie,sek1,sek2)=="S" THEN tinte=7: planet: tl=1: GO TO 340
312 IF gxe$(galaxie,sek1,sek2)=="P" THEN tinte=4: planet: tl=1: GO TO 340
320 raumschiff: GO TO 390
340 IF tl THEN IF py>-120 AND py<130 AND px>-80 AND px<80 THEN lnd=1
342 IF lnd THEN OVER -1: AT 0,3: PRINT "Auto Landing Computer on ...": OVER 0
350 IF lnd THEN IF gxe$(galaxie,sek1,sek2)=="P" THEN lnd=0: landen
352 IF lnd THEN IF gxe$(galaxie,sek1,sek2)=="S" THEN CLS#0: PRINT#0: PRINT#0;"MISSION FAILED": PRINT#0;" ==> Landed on Star": CLS#2: PRINT#2;"Beim Versuch auf einem    Stern zu landen wurde    das Raumschiff samt      Inhalt leicht ger„stet. Mission gescheitert ...": esc: GO TO 50
354 lnd=0: tl=0
390 pcs
399 END DEFine 
400 DEFine PROCedure change
410 IF galaxie>10 THEN galaxie=1
412 IF galaxie<1 THEN galaxie=10
420 IF sek1>5 THEN sek1=1
422 IF sek1<1 THEN sek1=5
430 IF sek2>5 THEN sek2=1
432 IF sek2<1 THEN sek2=5
490 anzeige
499 END DEFine 
500 DEFine PROCedure pdata
510 PRINT#0
512 PRINT#0;"       ";galaxie;". Galaxy"
514 PRINT#0;"    Sector S1/";sek1;",S2/";sek2
520 datars
522 IF gxe$(galaxie,sek1,sek2)=="S" THEN dg$="... Star ..."
524 IF gxe$(galaxie,sek1,sek2)=="P" THEN dg$="... Planet ..."
526 PRINT#0;"     ";dg$
599 END DEFine 
600 DEFine PROCedure datars
610 SELect ON rschiff
612  =1: dg$="Disco Very 2, Alien, 2 Laser"
614  =2: dg$="Geo D4, Alien, 1 Laser"
616  =3: dg$="Starstrike 2, Alien, 2 Laser"
618  =4: dg$="Elite V2, Alien, 3 Laser"
620  =5: dg$="DNEP PD4, Human, No Laser"
622  =6: dg$="Police Ac4, Human, 3 Laser"
630  =REMAINDER : dg$="No identification possible !!!"
639 END SELect 
699 END DEFine 
700 DEFine PROCedure treffer
710 IF energy<=0 THEN PRINT#0: PRINT#0;"MISSION FAILED": PRINT#0;" ==> Ship destroyed": CLS#2: PRINT#2;"Einige Leute  haben Ziel- schieœen auf das Raum-   schiff gemacht.         Mission gescheitert ...": esc: GO TO 50
720 anzeige
799 END DEFine 
800 DEFine PROCedure schuœ (stx,sty)
802 IF ro<190 OR t2=0 OR pxo<-90 OR pxo>90 THEN END DEFine 
810 scx=INT(RND(115))+5: scy=INT(RND(90))+5: INK 7
820 OVER -1
822 LINE stx,sty TO scx-5,scy: LINE stx,sty TO scx+5,scy: CIRCLE scx,scy,5
824  IF fx THEN BEEP 1500,2,343,23,12,54,788,1
826 LINE stx,sty TO scx-5,scy: LINE stx,sty TO scx+5,scy: CIRCLE scx,scy,5
828 OVER 0
830 energy=energy-10: treffer
899 END DEFine 
900 DEFine PROCedure explosion
902 OVER 0: INK 7
904 IF fx THEN BEEP 0,1,255,1,10,4,0,15
910 FOR rd=0 TO 20
912  FILL 1: CIRCLE 63,50,rd: FILL 0
914 END FOR rd
916 INK 2
920 FOR rd=0 TO 20
922  FILL 1: CIRCLE 63,50,rd: FILL 0
924 END FOR rd
926 INK 0
930 FOR rd=0 TO 20
932  FILL 1: CIRCLE 63,50,rd: FILL 0
934 END FOR rd
936 INK 7
940 BEEP
999 END DEFine 
1000 DEFine PROCedure pcs
1002 CLS#0: findrs
1004 PRINT#0;"  Parallax Computer System ..."
1006 IF comm$(1,1 TO 6)="      " THEN com$="NEW COMMANDER": PRINT#0: GO TO 1100
1008 angriff
1010 INPUT#0;">";com$
1100 IF com$=="NEW COMMANDER" THEN INPUT#0;"  Commander Name : ";comm$(1,1 TO 6): AT#3,3,15: PRINT#3;comm$(1,1 TO 6): PRINT#0;"   Good luck, Commander ";comm$(1,1 TO 6);" !!!"
1102 IF com$=="FLY" THEN fly: findrs
1104 IF com$=="INFO" THEN PRINT#0: PRINT#0;"    Fuel         : ";fuel: PRINT#0;"    Energy       : ";energy: PRINT#0;"    Mission Time : ";(DATE-time) DIV 60;":";(DATE-time) MOD 60
1106 IF com$=="G+" THEN galaxie=galaxie+1: change: pcs
1108 IF com$=="G-" THEN galaxie=galaxie-1: change: pcs
1110 IF com$=="S1+" THEN sek1=sek1+1: change: pcs
1112 IF com$=="S1-" THEN sek1=sek1-1: change: pcs
1114 IF com$=="S2+" THEN sek2=sek2+1: change: pcs
1116 IF com$=="S2-" THEN sek2=sek2-1: change: pcs
1120 IF com$=="DATA" THEN pdata
1130 IF com$=="SAVE" THEN DELETE "fdk1_Parallax_dat_"&comm$(1,1 TO 6): OPEN_NEW#4,"fdk1_Parallax_dat_"&comm$(1,1 TO 6): PRINT#4;galaxie: PRINT#4;sek1: PRINT#4;sek2: PRINT#4;fuel: PRINT#4;energy: PRINT#4;credits: PRINT#4;sgold: PRINT#4;scfs: PRINT#4;sschrott: PRINT#4;seisen: PRINT#4;scomputer: PRINT#4;skleidung: PRINT#4;sersatz: PRINT#4;sbatt: PRINT#4;shamb: PRINT#4;sb‡cher: PRINT#4;rschiff: CLOSE#4
1132 IF com$=="LOAD" THEN OPEN#4,"fdk1_Parallax_dat_"&comm$(1,1 TO 6): INPUT#4;galaxie: INPUT#4;sek1: INPUT#4;sek2: INPUT#4;fuel: INPUT#4;energy: INPUT#4;credits: INPUT#4;sgold: INPUT#4;scfs: INPUT#4;sschrott: INPUT#4;seisen: INPUT#4;scomputer: INPUT#4;skleidung: INPUT#4;sersatz: INPUT#4;sbatt: INPUT#4;shamb: INPUT#4;sb‡cher: INPUT#4;rschiff: CLOSE#4: anzeige
1900 energy=energy-.1
1990 anzeige
1992 com$="": GO TO 1010
1999 END DEFine 
2000 DEFine PROCedure abfrage
2010 IF px=5 AND py=-5 THEN IF ro>=190 THEN rsenergy=rsenergy-1
2012 IF rsenergy>0 THEN END DEFine 
2014 IF rschiff<>7 AND rschiff<>8 THEN explosion
2016 t2=0: INK 0: selonrs
2020 nm=INT(RND(2))+1
2022 IF rschiff=7 THEN energy=100: anzeige: nm=1
2024 IF rschiff=8 THEN fuel=100: anzeige: nm=1
2026 IF rschiff=5 THEN rschiff=6: credits=credits-10000: anzeige: pdata: raumschiff: END DEFine 
2030 IF rschiff=6 THEN credits=credits-1000: anzeige
2032 IF rschiff=2 THEN credits=credits+100
2034 IF rschiff=1 OR rschiff=3 THEN credits=credits+200
2036 IF rschiff=4 THEN credits=credits+500
2040 SELect ON nm
2042  =1: raus=1
2044  =2: rschiff=7: rsenergy=3: px=180: py=120: r=100
2046  =3: rschiff=8: rsenergy=3: px=120: py=180: r=100
2048 END SELect 
2099 END DEFine 
2100 DEFine PROCedure fbot
2102 gr=ro/15: x=pxo: y=pyo
2110 CIRCLE x,y,gr
2199 END DEFine 
2200 DEFine PROCedure ebot
2202 gr=ro/15: x=pxo: y=pyo
2210 LINE x,y TO x+gr,y TO x+gr,y+.5*gr TO x,y+.5*gr TO x,y
2212 LINE x+gr,y TO x+1.25*gr,y+.25*gr TO x+1.25*gr,y+.75*gr TO x+gr,y+.5*gr
2214 LINE x,y+.5*gr TO x+.25*gr,y+.75*gr TO x+1.25*gr,y+.75*gr
2299 END DEFine 
3000 DEFine PROCedure discovery
3002 gr=ro/10: x=pxo: y=pyo
3010 LINE x,y TO x+2*gr,y TO x+2*gr,y+gr TO x,y+gr TO x,y
3012 LINE x+2*gr,y TO x+2.5*gr,y+.5*gr TO x+2.5*gr,y+1.5*gr TO x+2*gr,y+gr
3014 LINE x,y+gr TO x+.5*gr,y+1.5*gr TO x+2.5*gr,y+1.5*gr
3020 LINE x,y TO x-1.5*gr,y+.5*gr TO x,y+gr
3022 LINE x-1.5*gr,y+.5*gr TO x-gr,y+gr TO x+.5*gr,y+1.5*gr
3030 scu=INT(RND(1))
3032 IF scu THEN schuœ x,y
3040 scu=INT(RND(1))
3042 IF scu THEN schuœ x+2*gr,y+gr
3099 END DEFine 
3100 DEFine PROCedure geo
3102 gr=ro/10: x=pxo: y=pyo
3110 LINE x,y-2*gr TO x,y+gr TO x+1.5*gr,y TO x,y-2*gr TO x-1.5*gr,y TO x,y+gr
3130 scu=INT(RND(1))
3132 IF scu THEN schuœ x,y-2*gr
3199 END DEFine 
3200 DEFine PROCedure starstrike
3202 gr=ro/10: x=pxo: y=pyo
3210 LINE x,y-gr TO x,y+gr TO x+.5*gr,y+gr TO x+.5*gr,y-gr TO x,y-gr
3212 LINE x,y-gr TO x+.25*gr,y-1.5*gr TO x+.5*gr,y-gr
3214 LINE x+.25*gr,y-1.5*gr TO x+.25*gr,y-1.75*gr
3216 LINE x+.25*gr,y+.5*gr TO x+.25*gr,y+1.5*gr
3218 LINE x,y-.8*gr TO x-gr,y+.8*gr TO x,y+.8*gr
3220 LINE x+.5*gr,y-.8*gr TO x+1.5*gr,y+.8*gr TO x+.5*gr,y+.8*gr
3230 scu=INT(RND(1))
3232 IF scu THEN schuœ x,y+.8*gr
3240 scu=INT(RND(1))
3242 IF scu THEN schuœ x+.5*gr,y+.8*gr
3299 END DEFine 
3300 DEFine PROCedure elite
3302 gr=ro/10: x=pxo: y=pyo
3310 LINE x+gr,y-.5*gr TO x-gr,y TO x+gr,y+.5*gr TO x+gr,y-.5*gr
3312 LINE x+gr,y-.5*gr TO x+2*gr,y TO x+2*gr,y+gr TO x+gr,y+.5*gr
3314 LINE x-gr,y TO x,y+.5*gr TO x+2*gr,y+gr
3316 LINE x+1.2*gr,y-.2*gr TO x+1.8*gr,y+.1*gr TO x+1.8*gr,y+.6*gr TO x+1.2*gr,y+.3*gr TO x+1.2*gr,y-.3*gr
3330 scu=INT(RND(1))
3332 IF scu THEN schuœ x-gr,y
3340 scu=INT(RND(1))
3342 IF scu THEN schuœ x+gr,y+.5*gr
3350 scu=INT(RND(1))
3352 IF scu THEN schuœ x+2*gr,y
3399 END DEFine 
3400 DEFine PROCedure enterprise
3402 gr=ro/10: x=pxo: y=pyo
3410 LINE x,y TO x,y+.5*gr TO x+2*gr,y+.5*gr TO x+2*gr,y TO x,y
3412 LINE x-.2*gr,y TO x-.1*gr,y+.1*gr TO x-.1*gr,y+.4*gr TO x-.2*gr,y+.5*gr
3414 LINE x+.2*gr,y+.5*gr TO x-.5*gr,y+gr: LINE x+.4*gr,y+.5*gr TO x-.3*gr,y+gr
3416 LINE x-1.2*gr,y+gr TO x+.2*gr,y+gr TO x+.5*gr,y+1.3*gr TO x-1.5*gr,y+1.3*gr TO x-1.2*gr,y+gr
3418 LINE x+1.5*gr,y+.25*gr TO x+1.7*gr,y+.75*gr: LINE x+1.8*gr,y+.25*gr TO x+2*gr,y+.75*gr
3420 LINE x+1.4*gr,y+.75*gr TO x+2.7*gr,y+.75*gr TO x+2.5*gr,y+gr TO x+1.4*gr,y+gr TO x+1.4*gr,y+.75*gr
3499 END DEFine 
3500 DEFine PROCedure police
3502 gr=ro/10: x=pxo: y=pyo
3510 LINE x,y-1.2*gr TO x,y+2*gr TO x+gr,y-.3*gr TO x,y-gr TO x-gr,y-.3*gr TO x,y+2*gr
3512 LINE x-gr,y-.3*gr TO x,y TO x+gr,y-.3*gr
3514 LINE x,y+1.7*gr TO x-1.5*gr,y+1.9*gr TO x-1.5*gr,y+.8*gr TO x,y+1.2*gr
3516 LINE x,y+1.7*gr TO x+1.5*gr,y+1.9*gr TO x+1.5*gr,y+.8*gr TO x,y+1.2*gr
3530 scu=INT(RND(1))
3532 IF scu THEN schuœ x,y+2*gr
3540 scu=INT(RND(1))
3542 IF scu THEN schuœ x-1.5*gr,y+.8*gr
3550 scu=INT(RND(1))
3552 IF scu THEN schuœ x+1.5*gr,y+.8*gr
3599 END DEFine 
4000 REMark Planeten-DATA's
4012 DATA "Alpha Centauri",100, 67, 15, 23, 92, 53, 77, 34, 17,  5
4023 DATA "Sirrah",         99, 23, 35, 40, 80, 23, 78, 12, 87, 43
4025 DATA "Alamak",         82, 14,  3, 45, 89, 44, 68, 65, 55, 67
4033 DATA "Mira",           56, 88, 12, 13, 44, 45, 57, 31, 79,  7
4044 DATA "Bellatrix",     102, 26,  1, 73,110, 30, 61, 37, 23, 86
4051 DATA "Aldebaran",      97, 64, 55, 58,103, 39, 36, 24, 10, 69
4055 DATA "Sirius",         27, 83, 53, 68,113, 21, 81, 45,  8, 84
4112 DATA "Procyon",        67, 89, 61, 99, 13, 43, 37, 17, 79, 23
4115 DATA "Alphard",        34, 12, 11, 28, 56, 42, 32, 16, 51,  5
4122 DATA "Pollux",         95,  2,  7, 65, 70,  5, 47, 99, 98, 48
4124 DATA "Beteigeuze",      5, 28, 17, 97, 57, 67, 48, 92,  3, 23
4142 DATA "Hamal",          19, 37, 22, 87, 86,  1, 38, 45, 83,  4
4144 DATA "Denebola",       38, 48, 28, 98,  1,100, 60, 20, 35, 45
4145 DATA "Spica",           5, 89, 94,  2,  3,  4,  9,100,  1, 45
4151 DATA "Mizar",          45, 35, 83, 94,  2, 96, 67, 76, 54, 45
4152 DATA "Arktur",         10, 95, 17, 11, 95,100,  4, 65, 73, 15
4211 DATA "Gemma",          27, 11,100,  4,  1, 97,  4, 49, 57, 55
4215 DATA "Wega",           12,  3, 14, 50, 21, 27, 69,  6,  2, 22
4222 DATA "Deneb",          30, 60, 52,  1, 55, 82, 32, 16, 26, 20
4225 DATA "Atair",           7, 48, 25, 16,  4, 60, 10, 16, 51, 21
4233 DATA "Albireo",        13, 20, 68,  2, 80, 13, 25, 48, 10, 60
4242 DATA "Capella",        24, 89, 26, 41, 71, 44, 80,  1, 59, 33
4245 DATA "Algenib",        36, 56, 65, 74, 24, 33, 52, 71, 65, 75
4251 DATA "Castor",         10,  1, 12,  7, 82, 19, 15, 59, 95, 34
4252 DATA "Antares",        42, 94, 96, 72, 95, 32, 50, 11, 99,  2
4254 DATA "Algol",          16, 32, 35, 99,  4,100, 70, 92, 16, 42
4311 DATA "Regulus",        52, 89, 14, 22,  2, 32, 24, 62, 99, 10
4315 DATA "Canopus",        69, 30,  7, 78, 32, 52, 11, 40, 16, 34
4321 DATA "Rigil Kent",    120, 99, 16, 34, 85, 21,  4, 52, 10, 99
4324 DATA "Arcturus",       10,104,  4, 20, 60, 99,  2, 52, 79, 42
4331 DATA "Achernar",       38, 26, 34, 86, 95, 21, 32,  2, 14, 89
4333 DATA "Acrux",          85,  1, 18,100, 32, 10, 16, 40, 99,  2
4342 DATA "Polaris",        32, 23, 99, 20, 14,  2,  9, 88, 67, 58
4351 DATA "Almach",         88,  1,  3,  2,108,  5, 56, 92, 88, 77
4353 DATA "Markab",         44, 48, 84, 57, 75,  5, 53, 60, 48, 99
4354 DATA "Alpheratz",     116, 64, 16,  4, 88, 10, 20, 40,  1, 94
4355 DATA "Sadr",           88, 80, 35, 22, 55, 23, 20, 10,100, 48
4412 DATA "Gienah",         90, 88, 12, 62, 11,  3,  2, 85, 84, 38
4423 DATA "Dorado",         42, 81, 95,114, 44, 32, 78, 94,108,  1
4425 DATA "Cetus",          11, 95, 98, 72, 85, 43, 41, 32, 21,  2
4431 DATA "Circinus",       11,  6, 19, 72, 14, 98, 47, 63, 98, 45
4443 DATA "Fornax",         32, 45, 87, 98, 32,110, 88, 34, 22,  9
4451 DATA "Draco",          10,  4,119, 19,  4, 65, 64, 12, 32, 28
4455 DATA "Lacerta",        85, 97, 85, 38, 45, 32, 21, 95, 21,  7
4513 DATA "Mimosa",          2, 94,  2, 74, 51, 86,100, 47,101,  2
4521 DATA "Cancer",         23, 22, 79, 58, 67, 47, 38, 63, 49,  9
4523 DATA "Gemini",         74, 20, 73,100, 52, 80, 50, 26, 10, 32
4525 DATA "Libra",          13, 23, 89, 11, 27, 21, 12, 43, 68,  8
4532 DATA "Antila",         47, 33, 12, 57, 80, 74, 59, 21, 72, 35
4534 DATA "Apus",           41, 13,100, 69, 59,102, 43,  6, 17, 26
4541 DATA "Argo",           97, 29, 50,  2, 73, 36, 30, 44, 47,100
4543 DATA "Corona Aust",    12, 69, 95, 68, 10, 55, 84, 67,  6, 48
4545 DATA "Crater",         31, 51, 90, 71, 24,  6, 47, 22,  8, 79
4552 DATA "Crux Aust",      26, 67, 28, 69, 51, 71, 81,102, 37, 53
4554 DATA "Eridanus",       51, 50,  7, 63, 34, 31, 27, 76, 69, 41
4555 DATA "Grus",           42, 24, 62, 12,  4, 97, 52, 62, 18, 23
4611 DATA "Horologius",     85, 12, 19, 28, 27, 61, 91, 56, 90, 12
4614 DATA "Hydra",          30, 80, 86, 39, 35, 36, 73, 47, 10,  9
4622 DATA "Malus",          55, 42, 66, 13, 97, 32, 63, 83,  3, 46
4625 DATA "Octans",         53, 23, 95, 21, 71, 83, 25, 81, 63, 19
4632 DATA "Phoenix",        65, 67, 79, 55, 77, 13, 71, 73,  6, 85
4634 DATA "Zaon",            6, 45, 92, 45,102, 93, 33, 17, 42, 80
4641 DATA "Pictor",         27, 93, 55, 64, 10, 92, 93, 89, 70, 49
4643 DATA "Piscis Aust",     6, 77, 91, 16, 70, 40, 67, 67, 68, 41
4651 DATA "Puppis",         36, 76, 46,  3,  4,  1, 85, 50, 17, 85
4654 DATA "Sextans",        65, 61, 88, 51, 73, 91, 55, 68, 53, 75
4655 DATA "Vela",           41, 82, 17, 81, 40, 13, 39, 15, 98, 53
4714 DATA "Hosu",           64, 10, 75, 70, 78, 64, 23, 93, 97, 47
4723 DATA "Andro",          56, 91, 99, 31, 55, 50, 95, 42, 67, 72
4732 DATA "Aquila",         12, 75, 80, 98, 44, 87,101,  5, 90, 34
4734 DATA "Auriga",         39, 53,  3, 73,  8, 26, 18, 69,  9, 32
4742 DATA "Bo„tes",         55, 43, 16, 79, 96, 18, 69, 70, 69, 81
4745 DATA "Camelopardalis", 37, 67, 99,  9, 81, 83, 35, 90, 60, 18
4751 DATA "Canes Venatici", 54, 73,101, 87, 68,102, 73, 92, 50, 74
4753 DATA "Canis Minor",    16, 74, 32, 40, 95, 63,100, 42,  9, 88
4812 DATA "Cassio",         16, 10, 80, 23, 90, 69, 90, 55, 87, 87
4821 DATA "Cepheus",        66, 29, 28, 89, 16, 30, 85, 39, 31, 54
4824 DATA "Coma Berenices", 78, 31, 97, 81, 62, 82, 34, 11, 98, 92
4831 DATA "Corona Bor",     28, 88, 94, 23, 64, 91, 83, 24, 52,  4
4833 DATA "Cygnus",         10, 23, 94, 26,100,107, 36, 77, 11, 91
4835 DATA "Delpho",         94, 75,  9, 11,  4, 39, 54, 56, 96, 80
4845 DATA "Equuleus",       20, 89,100, 54, 15, 79, 53, 44,102, 57
4853 DATA "Leo Minor",      36, 81, 45, 47, 46, 59, 86, 68, 93, 14
4922 DATA "Lynx",           68, 11, 22, 15, 17, 14, 41, 38, 46, 79
4924 DATA "Lyra",           30, 67, 96, 44, 23, 32, 70, 23, 80,102
4934 DATA "Orion",          92, 87, 89, 41, 56, 87, 16, 78, 88, 44
4941 DATA "Ursa Minor",     25,100, 25, 62, 36, 97, 14, 76, 40, 63
4942 DATA "Canis Major",    24, 94, 72, 91, 91, 12, 52, 76, 26, 27
4945 DATA "Triangulo",      22, 68, 48,  4, 86, 26, 24, 54, 18, 58
4953 DATA "Ursa Major",     47, 64, 45, 52, 70, 37, 81, 74, 59, 59
4954 DATA "Serpens",        33, 60, 68, 83, 49, 52, 84, 11, 78, 66
5000 DEFine PROCedure landen
5002 fuel=fuel-5: anzeige: jf=0
5004 RESTORE 4000+(galaxie-1)*100+sek1*10+sek2
5010 READ pname$,gold,cfs,schrott,eisen,computer,kleidung,ersatz,batt,hamb,b‡cher
5012 OVER -1: AT 1,3: PRINT "Landing on ";pname$;"...": OVER 0
5014 FOR wa=0 TO 2000: END FOR wa: CLS: CLS#0
5020 com2$="DATA": GO TO 5032
5030 INPUT#0;">";com2$
5032 IF com2$="" THEN GO TO 5090
5040 IF com2$=="DATA" THEN CLS: PRINT "          ";pname$: PRINT: PRINT "0.) Gold              : ";gold: PRINT "1.) Cola/Fanta/Sprite : ";cfs: PRINT "2.) Schrott           : ";schrott: PRINT "3.) Eisen             : ";eisen: PRINT "4.) Computer          : ";computer: PRINT "5.) Kleidung          : ";kleidung: PRINT "6.) Ersatzteile       : ";ersatz: PRINT "7.) Batterien         : ";batt: PRINT "8.) Hamburger         : ";hamb: PRINT "9.) B‡cher            : ";b‡cher
5042 IF com2$=="INFO" THEN CLS: PRINT "          ";credits;" Credits": PRINT: PRINT "0.) Gold              : ";sgold: PRINT "1.) Cola/Fanta/Sprite : ";scfs: PRINT "2.) Schrott           : ";sschrott: PRINT "3.) Eisen             : ";seisen: PRINT "4.) Computer          : ";scomputer: PRINT "5.) Kleidung          : ";skleidung: PRINT "6.) Ersatzteile       : ";sersatz: PRINT "7.) Batterien         : ";sbatt: PRINT "8.) Hamburger         : ";shamb: PRINT "9.) B‡cher            : ";sb‡cher
5044 IF com2$=="DATA" THEN FOR zl=2 TO 11: AT zl,28: PRINT "Credits": END FOR zl
5046 IF com2$=="INFO" THEN FOR zl=2 TO 11: AT zl,28: PRINT "Ton": END FOR zl
5050 IF com2$(1 TO 3)=="BUY" THEN buy
5052 IF com2$(1 TO 4)=="SELL" THEN sell
5054 IF com2$=="FLY" THEN starten
5060 IF com2$=="FUEL" THEN PRINT#0;"   Fuel : ";fuel: INPUT#0;"    How much fuel ? ";mf: jf=1
5062  IF jf THEN IF credits-mf<0 THEN jf=0: PRINT#0;"     Not enough Credits !!!"
5064  IF jf THEN IF fuel+mf>100 THEN jf=0: PRINT#0;"     Too much fuel !!!"
5066  IF jf THEN credits=credits-mf: fuel=fuel+mf: jf=0: anzeige: com2$="INFO": GO TO 5042
5090 energy=energy-.1: anzeige
5092 com2$="": GO TO 5030
5099 END DEFine 
5100 DEFine PROCedure buy
5102 zahl=com2$(5)
5104 umrechnen
5110 INPUT#0;"    How many ton ? ";ton
5112 IF ton+wert2>10 THEN PRINT#0;"     Not more than 10 ton !!!": END DEFine 
5114 IF credits-ton*wert1<0 THEN PRINT#0;"     Not enough Credits !!!": END DEFine 
5120 credits=credits-ton*wert1: wert2=wert2+ton
5122 ur2
5124 CLS: PRINT "          ";credits;" Credits": PRINT: PRINT "0.) Gold              : ";sgold: PRINT "1.) Cola/Fanta/Sprite : ";scfs: PRINT "2.) Schrott           : ";sschrott: PRINT "3.) Eisen             : ";seisen: PRINT "4.) Computer          : ";scomputer: PRINT "5.) Kleidung          : ";skleidung: PRINT "6.) Ersatzteile       : ";sersatz: PRINT "7.) Batterien         : ";sbatt: PRINT "8.) Hamburger         : ";shamb: PRINT "9.) B‡cher            : ";sb‡cher
5126 FOR zl=2 TO 11: AT zl,28: PRINT "Ton": END FOR zl
5149 END DEFine 
5150 DEFine PROCedure ur2
5152 SELect ON zahl
5154  =0: sgold=wert2
5156  =1: scfs=wert2
5158  =2: sschrott=wert2
5160  =3: seisen=wert2
5162  =4: scomputer=wert2
5164  =5: skleidung=wert2
5166  =6: sersatz=wert2
5168  =7: sbatt=wert2
5170  =8: shamb=wert2
5172  =9: sb‡cher=wert2
5179 END SELect 
5199 END DEFine 
5200 DEFine PROCedure sell
5202 zahl=com2$(6)
5204 umrechnen
5210 INPUT#0;"    How many ton ? ";ton
5212 IF wert2-ton<0 THEN PRINT#0;"     Not enough store !!!": END DEFine 
5220 credits=credits+ton*wert1: wert2=wert2-ton
5222 ur2
5224 CLS: PRINT "          ";credits;" Credits": PRINT: PRINT "0.) Gold              : ";sgold: PRINT "1.) Cola/Fanta/Sprite : ";scfs: PRINT "2.) Schrott           : ";sschrott: PRINT "3.) Eisen             : ";seisen: PRINT "4.) Computer          : ";scomputer: PRINT "5.) Kleidung          : ";skleidung: PRINT "6.) Ersatzteile       : ";sersatz: PRINT "7.) Batterien         : ";sbatt: PRINT "8.) Hamburger         : ";shamb: PRINT "9.) B‡cher            : ";sb‡cher
5226 FOR zl=2 TO 11: AT zl,28: PRINT "Ton": END FOR zl
5299 END DEFine 
5300 DEFine PROCedure umrechnen
5310 SELect ON zahl
5312  =0: wert1=gold: wert2=sgold
5314  =1: wert1=cfs: wert2=scfs
5316  =2: wert1=schrott: wert2=sschrott
5318  =3: wert1=eisen: wert2=seisen
5320  =4: wert1=computer: wert2=scomputer
5322  =5: wert1=kleidung: wert2=skleidung
5324  =6: wert1=ersatz: wert2=sersatz
5326  =7: wert1=batt: wert2=sbatt
5328  =8: wert1=hamb: wert2=shamb
5330  =9: wert1=b‡cher: wert2=sb‡cher
5339 END SELect 
5399 END DEFine 
5500 DEFine PROCedure starten
5502 px=180: py=0: r=200: CLS
5504 AT#2,12,0: PRINT#2;"Entfernung Planet :"
5506 AT#2,1,0: PRINT#2;"Neigung X: "
5508 AT#2,2,0: PRINT#2;"Neigung Y: "
5510 tinte=4
5520 REPeat wr
5522  INK tinte
5524  IF r>=0 THEN FILL 1: CIRCLE px+50,py+50,r/2: FILL 0
5530  pxo=px+50: pyo=py+50: ro=r/2
5550  IF px>=-90 AND px<=90 THEN r=r+1: ELSE r=r-1
5552  IF r<=0 THEN OVER 0: EXIT wr
5560  steuerung
5562  INK 0
5564  IF ro>=0 THEN FILL 1: CIRCLE pxo,pyo,ro: FILL 0
5570  IF py>=270 THEN py=-90
5572  IF py<=-270 THEN py=90
5574  IF px>=270 THEN px=-90
5576  IF px<=-270 THEN px=90
5590 END REPeat wr
5592 AT#2,12,0: PRINT#2;"                         "
5594 AT#2,13,7: PRINT#2;"            ": AT#2,1,0: PRINT#2;"                 "
5596 AT#2,2,0: PRINT#2;"                 ": INK 7
5598 pcs
5599 END DEFine 
5600 DEFine PROCedure resc
5610 IF ro>=190 THEN IF rschiff=5 THEN IF credits>=50000 THEN sieg
5620 IF ro>=190 THEN galaxie=INT(RND(4))+1: sek1=INT(RND(4))+1: sek2=INT(RND(4))+1: CLS: anzeige: raus=1: END DEFine 
5630 IF rschiff<5 THEN IF ro>=100 THEN galaxie=INT(RND(4))+1: sek1=INT(RND(4))+1: sek2=INT(RND(4))+1: CLS: anzeige: raus=1: END DEFine 
5640 IF ro>=100 THEN raus=1: END DEFine 
5650 PRINT#0;"    Too far away !!!"
5699 END DEFine 
6000 DEFine PROCedure men‡
6002 CLS#0: CLS
6004 IF fx THEN BEEP 0,45,3,123,124,54,65,76
6010 PRINT#0;"  F1 -  Start": PRINT#0;"  F2 -  Info": PRINT#0;"  F3 -  Quit"
6012 PRINT#0;"  SHIFT -  Sound on": PRINT#0;"  ENTER -  Sound off"
6020 REPeat warten
6022  IF KEYROW(0)=2 THEN EXIT warten
6024  IF KEYROW(0)=8 THEN CLS: PRINT: PRINT: PRINT "Wer dieses Programm nicht von untenstehender  Adresse hat, sei doch bitte so fair und       schicke DM 5 und einen frankierten und an sichselbst adressierten R‡ckumschlag dorthin.     Er oder sie erh€lt dann eine Anleitung mit    einigen n‡tzlichen Tips.": PRINT: PRINT "     Thomas Much": PRINT "     Koppelweg 16a": PRINT "     3201 Diekholzen"
6026  IF KEYROW(0)=16 THEN POKE_L 163900,0: POKE 163900,25
6030  IF KEYROW(1)=1 THEN fx=0: BEEP
6032  IF KEYROW(7)=1 THEN fx=1: BEEP 0,45,3,123,124,54,65,76
6039 END REPeat warten
6040 CLS#0: CLS#1: CLS#2: CLS#3: OVER#0,0: OVER#1,0: OVER#2,0: OVER#3,0: INK#0,7: INK#1,7: INK#2,7: INK#3,7
6042 BEEP
6099 END DEFine 
7000 DEFine PROCedure sieg
7002 CLS#0: CLS
7010 PRINT: PRINT "Herzlichen Gl‡ckwunsch, Commander ";comm$(1,1 TO 6);" !!!"
7012 PRINT: PRINT "Sie haben die Mission hervorragend erf‡llt": PRINT "und dabei insgesamt ";credits;" Credits": PRINT "erwirtschaftet !"
7014 PRINT: PRINT "Vielleicht hat die ESA demn€chst wieder einen Auftrag f‡r Sie (d.h., Fortsetzung folgt !)."
7016 AT 12,5: PRINT "Weiter mit >SPACE<."
7020 REPeat warten
7022 IF KEYROW(1)=64 THEN EXIT warten
7029 END REPeat warten
7040 GO TO 50
7099 END DEFine 
8000 DEFine PROCedure angriff
8010 IF credits<30000 THEN END DEFine 
8012 IF rschiff>4 THEN END DEFine 
8014 IF gxe$(galaxie,sek1,sek2)<>" " THEN END DEFine 
8020 jn=INT(RND(2))
8022 IF jn THEN END DEFine 
8030 CLS#0: pdata
8032 raumschiff
8099 END DEFine 
32000 DEFine PROCedure rahmen (kanal,breite)
32002 CLS#kanal
32010 INK#kanal,7: FILL#kanal,1
32012 LINE#kanal,0,0 TO 5,5 TO 5,95 TO 0,100 TO 0,0: FILL#kanal,0
32020 INK#kanal,7,0: FILL#kanal,1
32022 LINE#kanal,0,0 TO breite,0 TO breite-5,5 TO 5,5 TO 0,0: FILL#kanal,0
32024 FILL#kanal,1: LINE#kanal,0,100 TO breite,100 TO breite-5,95 TO 5,95 TO 0,100: FILL#kanal,0
32030 INK#kanal,7
32032 LINE#kanal,0,0 TO breite,0 TO breite-5,5 TO 5,5 TO 0,0
32034 LINE#kanal,0,100 TO breite,100 TO breite-5,95 TO 5,95 TO 0,100
32040 LINE#kanal,breite,0 TO breite,100 TO breite-5,95 TO breite-5,5 TO breite,0
32042 BORDER#kanal,10
32099 END DEFine 
32100 DEFine PROCedure planet
32102 px=0: py=0: r=0: CLS
32104 AT#2,12,0: PRINT#2;"Entfernung Planet/Stern :"
32106 AT#2,1,0: PRINT#2;"Neigung X: "
32108 AT#2,2,0: PRINT#2;"Neigung Y: "
32120 REPeat wr
32122  INK tinte
32124  IF r>=0 THEN FILL 1: CIRCLE px+50,py+50,r/2: FILL 0
32130  pxo=px+50: pyo=py+50: ro=r/2
32150  IF px>=-90 AND px<=90 THEN r=r+1: ELSE r=r-1
32152  IF r>=200 THEN OVER 0: EXIT wr
32160  steuerung
32162  INK 0
32164  IF ro>=0 THEN FILL 1: CIRCLE pxo,pyo,ro: FILL 0
32170  IF py>=270 THEN py=-90
32172  IF py<=-270 THEN py=90
32174  IF px>=270 THEN px=-90
32176  IF px<=-270 THEN px=90
32190 END REPeat wr
32192 AT#2,12,0: PRINT#2;"                         "
32194 AT#2,13,7: PRINT#2;"          ": AT#2,1,0: PRINT#2;"                 "
32196 AT#2,2,0: PRINT#2;"                 ": INK 7
32199 END DEFine 
32200 DEFine PROCedure steuerung
32210 k1=KEYROW(1)
32212  IF k1=16 THEN px=px-5
32214  IF k1=2 THEN px=px+5
32216  IF k1=4 THEN py=py+5
32218  IF k1=128 THEN py=py-5
32220  IF k1=20 THEN px=px-5: py=py+5
32222  IF k1=130 THEN px=px+5: py=py-5
32224  IF k1=6 THEN px=px+5: py=py+5
32226  IF k1=144 THEN px=px-5: py=py-5
32240 anzeige
32242 fire=0
32250 IF KEYROW(1)=64 THEN fire=1
32252  IF fire THEN OVER -1: INK 7
32254  IF fire THEN LINE 55,50 TO 60,50: LINE 66,50 TO 71,50: LINE 63,47 TO 63,42: LINE 63,53 TO 63,58
32256  IF fire THEN LINE 0,0 TO 63,50: LINE 5,0 TO 63,50: LINE 125,0 TO 63,50: LINE 120,0 TO 63,50: IF fx THEN BEEP 4000,12,322,54,65,43,2,2
32258  IF fire THEN LINE 0,0 TO 63,50: LINE 5,0 TO 63,50: LINE 125,0 TO 63,50: LINE 120,0 TO 63,50
32260  IF fire THEN LINE 55,50 TO 60,50: LINE 66,50 TO 71,50: LINE 63,47 TO 63,42: LINE 63,53 TO 63,58
32262  IF fire THEN OVER 0: energy=energy-1
32270  AT#2,13,7: PRINT#2;200-r;" Astrals  "
32272  AT#2,1,11: PRINT#2;px;"'  "
32274  AT#2,2,11: PRINT#2;py;"'  "
32276  ax=(15*px/90)/30*PI: sx=(r-200)/10*SIN(ax): sy=(r-200)/10*COS(ax)
32278  OVER#2,-1: INK#2,7
32280  FILL#2,1: CIRCLE#2,35-sx,50-sy,1: FILL#2,0
32282  FILL#2,1: CIRCLE#2,35-sx,50-sy,1: FILL#2,0
32284  OVER#2,0
32299 END DEFine 
32300 DEFine PROCedure raumschiff
32302 px=0: py=0: r=0: raus=0: CLS
32304 AT#2,12,0: PRINT#2;"Entfernung Raumschiff :"
32306 AT#2,1,0: PRINT#2;"Neigung X: "
32308 AT#2,2,0: PRINT#2;"Neigung Y: "
32310 rsenergy=3
32320 REPeat wr
32322  INK tinte: t2=tinte
32324  pxo=px+50: pyo=py+50: ro=r
32326  IF KEYROW(1)=8 THEN resc
32328  IF ro>=0 THEN selonrs
32350  IF px>=-90 AND px<=90 THEN r=r+1: ELSE r=r-1
32354  IF r>=200 THEN IF px>=-90 AND px<=90 THEN REPeat rw: px=px+90: IF px>90 THEN EXIT rw: END REPeat rw
32356  steuerung
32358  IF fire THEN fire=0: abfrage
32360  IF raus THEN EXIT wr
32364  INK 0: t2=0
32366  IF ro>=0 THEN selonrs
32370  IF py>=270 THEN py=-90
32372  IF py<=-270 THEN py=90
32374  IF px>=270 THEN px=-90
32376  IF px<=-270 THEN px=90
32390 END REPeat wr
32392 AT#2,12,0: PRINT#2;"                        "
32394 AT#2,13,7: PRINT#2;"          ": AT#2,1,0: PRINT#2;"                  "
32396 AT#2,2,0: PRINT#2;"                  ": INK 7
32399 END DEFine 
32400 DEFine PROCedure findrs
32404 rschiff=INT(RND(5))+1
32406 IF rschiff<5 THEN tinte=4: ELSE tinte=7
32409 END DEFine 
32420 DEFine PROCedure selonrs
32422 SELect ON rschiff
32424  =1: discovery
32426  =2: geo
32428  =3: starstrike
32430  =4: elite
32432  =5: enterprise
32434  =6: police
32436  =7: ebot
32438  =8: fbot
32440 END SELect 
32449 END DEFine 
32500 REMark DATA's
32501 REMark Galaxie 1
32502 DATA "SP   "
32503 DATA "  P P"
32504 DATA "  P  "
32505 DATA "   P "
32506 DATA "P   P"
32507 REMark Galaxie 2
32508 DATA " P  P"
32509 DATA " P P "
32510 DATA "  S  "
32511 DATA " P PP"
32512 DATA "PP   "
32513 REMark Galaxie 3
32514 DATA "P   P"
32515 DATA " P  P"
32516 DATA "  PS "
32517 DATA " P  P"
32518 DATA "PP P "
32519 REMark Galaxie 4
32520 DATA "P   P"
32521 DATA "P  P "
32522 DATA "P P  "
32523 DATA " P   "
32524 DATA "S PPP"
32525 REMark Galaxie 5
32526 DATA " P   "
32527 DATA "  P P"
32528 DATA "P    "
32529 DATA "  PS "
32530 DATA "P   P"
32531 REMark Galaxie 6
32532 DATA "  P  "
32533 DATA "P P P"
32534 DATA " P P "
32535 DATA "P PSP"
32536 DATA " P PP"
32537 REMark Galaxie 7
32538 DATA "PS P "
32539 DATA " P  P"
32540 DATA " P P "
32541 DATA "P P  "
32542 DATA "P  PP"
32543 REMark Galaxie 8
32544 DATA "   PS"
32545 DATA "  P  "
32546 DATA " P P "
32547 DATA " P  P"
32548 DATA "P P  "
32549 REMark Galaxie 9
32550 DATA " P   "
32551 DATA "P  P "
32552 DATA "P P P"
32553 DATA " S  P"
32554 DATA "  P  "
32555 REMark Galaxie 10
32556 DATA "     "
32557 DATA " P P "
32558 DATA "   P "
32559 DATA "PP  P"
32560 DATA "  PPS"
32600 DEFine PROCedure init
32602 CLS#2: CLS#3
32610 AT#3,0,0: PRINT#3;"Galaxy  :"
32612 AT#3,1,0: PRINT#3;"Sector  :"
32614 AT#3,5,0: PRINT#3;"Fuel    :"
32616 AT#3,6,0: PRINT#3;"Energy  :"
32620 AT#3,3,1: PRINT#3;"*** Commander ";comm$(1,1 TO 6);" ***"
32648 INK#2,4
32650 CIRCLE#2,35,50,20: CIRCLE#2,35,50,10: CIRCLE#2,35,50,5
32652 LINE#2,35,30 TO 35,70: LINE#2,15,50 TO 55,50
32654 LINE#2,35,50 TO 55,53: LINE#2,35,50 TO 15,53
32660 INK#2,7
32699 END DEFine 
32700 DEFine PROCedure win
32702 WINDOW#0,512,50,0,206: CLS#0
32704 WINDOW#1,512,206,0,0: CLS#1
32706 WINDOW#2,512,206,0,0: CLS#2
32709 END DEFine 
32720 DEFine PROCedure bell
32724 BEEP 30000,12,34,34,21,12,32,2323
32729 END DEFine 
32760 DEFine PROCedure SA
32762 DELETE fdk1_Parallax: SAVE fdk1_Parallax: DIR fdk1_
32764 END DEFine 
